{"version":3,"sources":["components/SearchPanel.tsx","components/Header.tsx","components/Tabs/IconTabsPanel.tsx","components/List/Item.tsx","components/List/TaskList.tsx","components/Tabs/IconLabelsPanel.tsx","tasks/tasks.ts","components/Main.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","margin","spacing","searchIcon","fill","searchBar","flexGrow","searchText","fontFamily","color","underline","border","SearchPanel","search","classes","useState","setSearchText","useEffect","className","Grid","container","alignItems","item","TextField","size","id","label","InputLabelProps","style","InputProps","fullWidth","onChange","event","target","value","header","position","padding","fontSize","background","borderRadius","Header","Box","mb","tabsPanel","overflowY","IconTabsPanel","props","children","index","otherProps","p","Typography","component","createStyles","minutes","height","cart","text","arrow","Item","ListItem","ListItemIcon","ListItemText","primary","title","ListItemSecondaryAction","demo","backgroundColor","palette","paper","noResults","textAlign","TaskList","List","dense","tasks","length","map","task","key","Divider","root","width","tab","minWidth","textTransform","customTabRoot","IconLabelsPanel","items","React","setValue","Paper","square","Tabs","newValue","variant","TabIndicatorProps","Tab","icon","data","income","expenses","savings","debt","goals","emergency","AllTasks","Main","setTasks","foundedTask","setFoundedTask","filteredData","filter","toLowerCase","indexOf","App","justify","lg","xs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00c4652e.chunk.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, TextField, Theme } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  searchIcon: {\n    fill: 'darkGray',\n  },\n  searchBar: {\n    flexGrow: 1,\n  },\n  searchText: {\n    fontFamily: 'sans-serif', \n    color: \"#7fbc81\"\n  },\n  underline: {\n    '&::after': {\n      border: '1px solid #7fbc81'\n    }\n  }\n}));\n\ntype SearchPanelPropsType = {\n  search: (text: string) => void;\n};\n\nconst SearchPanel: FC<SearchPanelPropsType> = ({ search }) => {\n  const classes = useStyles();\n  const [searchText, setSearchText] = useState<string>('');\n\n  useEffect((): void => {\n    search(searchText);\n    // eslint-disable-next-line\n  }, [searchText]);\n\n  return (\n    <div className={classes.margin}>\n      <Grid container spacing={1} alignItems=\"flex-end\">\n        <Grid item>\n          <SearchIcon className={classes.searchIcon} />\n        </Grid>\n        <Grid item className={classes.searchBar}>\n          <TextField\n            className={classes.searchText}\n            size=\"small\"\n            id=\"input-with-icon-grid\"\n            label=\"What do you need help with?\"\n            InputLabelProps={{style: {color: '#B0B0B0'}}}\n            InputProps={{ classes: {underline: classes.underline} }}\n            fullWidth\n            onChange={(event): void => setSearchText(event.target.value)}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default SearchPanel;\n","import React, { FC } from 'react';\n\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Search from './SearchPanel';\n\nconst useStyles = makeStyles({\n  header: {\n    position: 'static',\n    padding: '20px',\n    fontSize: '27px',\n    color: 'white',\n    background: \"#7fbc81\",\n    fontFamily: 'sans-serif'\n  },\n  search: {\n    padding: '0 10px',\n    background: 'white',\n    borderRadius: '15px'\n  },\n});\n\ntype HeaderPropsType = {\n  search: (searchText: string) => void;\n};\n\nconst Header: FC<HeaderPropsType> = ({ search }): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.header}>\n      <Box mb={3}>We can help with lots of things. Browse or search for what you need.</Box>\n      <div className={classes.search}>\n        <Search search={search} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { FC } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n  tabsPanel: {\n    overflowY: 'auto',\n  }\n});\n\ninterface TabsPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst IconTabsPanel: FC<TabsPanelProps> = (props): JSX.Element => {\n  const { children, value, index, ...otherProps } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.tabsPanel}{...otherProps}>\n      {value === index && (\n        <Box p={1}>\n          <Typography component=\"div\">{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default IconTabsPanel;\n","import React, { FC } from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport { Task } from '../../types/Task';\n\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    minutes: {\n      color: '#B0B0B0'\n    },\n    item: {\n      height: '55px',\n    },\n    cart: {\n      fill: '#B0B0B0',\n    },\n    text: {\n      fontSize:'1.0em',\n      //fontFamily: 'sansSerif',\n    },\n    arrow: {\n      fill: 'gray'\n    }\n  })\n);\n\ninterface ItemProps {\n  item: Task;\n}\n\nconst Item: FC<ItemProps> = ({ item }): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <ListItem className={classes.item}>\n      <ListItemIcon>\n        <ShoppingCartIcon className={classes.cart} />\n      </ListItemIcon>\n      {<ListItemText classes={{primary:classes.text}} primary={item.title} />}\n      <div className={classes.minutes}>\n        {`${item.minutes} min.`}\n      </div>\n      <ListItemSecondaryAction>\n          <ArrowForwardIosIcon className={classes.arrow} fontSize=\"small\"/>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Item;\n","import React, { FC } from 'react';\n\nimport List from '@material-ui/core/List';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport ItemComponent from './Item';\n\nimport { Task } from '../../types/Task';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    demo: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    noResults: {\n      textAlign: 'center',\n    },\n  })\n);\n\ntype TaskListPropsType = {\n  tasks: Task[];\n};\n\nconst TaskList: FC<TaskListPropsType> = (item): JSX.Element => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.demo}>\n      <List dense>\n        {item.tasks && item.tasks.length ? (\n          item.tasks.map((task) => (\n            <div key={task.title}>\n              <ItemComponent item={task} />\n              <Divider />\n            </div>\n          ))\n        ) : (\n          <div className={classes.noResults}>There are no tasks found</div>\n        )}\n      </List>\n    </div>\n  );\n};\n\nexport default TaskList;","import React, { FC } from 'react';\n\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\nimport AssistantPhotoIcon from '@material-ui/icons/AssistantPhoto';\nimport HouseIcon from '@material-ui/icons/House';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport WorkIcon from '@material-ui/icons/Work';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TabsPanel from './IconTabsPanel';\nimport InteractiveList from '../List/TaskList';\nimport { TasksPack } from '../../types/Task';\n\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: 'white',\n  },\n  tab: {\n    fontSize: '0.65rem',\n    minWidth: '16.66%',\n    textTransform: 'none',\n  },\n  customTabRoot: {\n    color: \"#7fbc81\",\n  }\n});\n\ntype TabsProps = {\n  data: TasksPack;\n};\n\nconst IconLabelsPanel: FC<TabsProps> = (items): JSX.Element => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper square className={classes.root}>\n      <Tabs value={value}\n        classes={{\n          root: classes.customTabRoot,\n        }}\n        onChange={handleChange}\n        variant=\"scrollable\"\n        TabIndicatorProps={{style: {background:'#7fbc81'}}}\n      >\n        <Tab className={classes.tab} icon={<HouseIcon />} label=\"Income\" />\n        <Tab className={classes.tab} icon={<ShoppingCartIcon />} label=\"Expenses\" />\n        <Tab className={classes.tab} icon={<NotificationsActiveIcon />} label=\"Savings\" />\n        <Tab className={classes.tab} icon={<WorkIcon />} label=\"Debt\" />\n        <Tab className={classes.tab} icon={<AssistantPhotoIcon />} label=\"Goals\" />\n        <Tab className={classes.tab} icon={<VerifiedUserIcon />} label=\"Emergency\" />\n      </Tabs>\n      <TabsPanel value={value} index={0}>\n        <InteractiveList tasks={items.data.income} />\n      </TabsPanel>\n      <TabsPanel value={value} index={1}>\n        <InteractiveList tasks={items.data.expenses} />\n      </TabsPanel>\n      <TabsPanel value={value} index={2}>\n        <InteractiveList tasks={items.data.savings} />\n      </TabsPanel>\n      <TabsPanel value={value} index={3}>\n        <InteractiveList tasks={items.data.debt} />\n      </TabsPanel>\n      <TabsPanel value={value} index={4}>\n        <InteractiveList tasks={items.data.goals} />\n      </TabsPanel>\n      <TabsPanel value={value} index={5}>\n        <InteractiveList tasks={items.data.emergency} />\n      </TabsPanel>\n    </Paper>\n  );\n};\n\nexport default IconLabelsPanel;\n","import { TasksPack } from \"../types/Task\";\r\n\r\nexport const AllTasks: TasksPack = {\r\n    income: [\r\n        {\"id\": \"0\",\"minutes\": 9,\"title\": \"Quick check-up\"},\r\n        {\"id\": \"1\",\"minutes\": 24,\"title\": \"Master my expenses\"},\r\n        {\"id\": \"2\",\"minutes\": 20,\"title\": \"Can I afford what I want?\"},\r\n        {\"id\": \"3\",\"minutes\": 9,\"title\": \"Live within my means\"}\r\n    ],\r\n    expenses: [\r\n        {\"id\": \"0\",\"minutes\": 79,\"title\": \"Lorem ipsum dolor sit amet\"},\r\n        {\"id\": \"1\",\"minutes\": 24,\"title\": \"consectetur adipiscing elit\"},\r\n        {\"id\": \"2\",\"minutes\": 40,\"title\": \"sed do eiusmod tempor incididunt\"},\r\n        {\"id\": \"3\",\"minutes\": 49,\"title\": \"et dolore magna aliqua\"}\r\n    ],\r\n    savings: [\r\n        {\"id\": \"0\",\"minutes\": 9,\"title\": \"Ut enim ad minim veniam\"},\r\n        {\"id\": \"1\",\"minutes\": 3,\"title\": \"quis nostrud exercitation ullamco\"},\r\n        {\"id\": \"2\",\"minutes\": 40,\"title\": \"laboris nisi ut aliquip ex ea\"},\r\n        {\"id\": \"3\",\"minutes\": 39,\"title\": \"commodo consequat\"}\r\n    ],\r\n    \r\n    debt: [\r\n        {\"id\": \"0\",\"minutes\": 9,\"title\": \"Duis aute irure dolor\"},\r\n        {\"id\": \"1\",\"minutes\": 24,\"title\": \"in reprehenderit in voluptate\"},\r\n        {\"id\": \"2\",\"minutes\": 20,\"title\": \"velit esse cillum dolore eu\"},\r\n        {\"id\": \"3\",\"minutes\": 9,\"title\": \"fugiat nulla pariatur\"}\r\n    ],\r\n    \r\n    goals: [\r\n        {\"id\": \"0\",\"minutes\": 4,\"title\": \"Excepteur sint occaecat\"},\r\n        {\"id\": \"1\",\"minutes\": 2,\"title\": \"cupidatat non proident\"},\r\n        {\"id\": \"2\",\"minutes\": 4,\"title\": \"sunt in culpa qui officia\"},\r\n        {\"id\": \"3\",\"minutes\": 49,\"title\": \"et dolore magna aliqua\"}\r\n    ],\r\n    emergency: [\r\n        {\"id\": \"0\",\"minutes\": 74,\"title\": \" deserunt mollit anim id\"},\r\n        {\"id\": \"1\",\"minutes\": 26,\"title\": \"anim id est laborum\"},\r\n        {\"id\": \"2\",\"minutes\": 4,\"title\": \"laboris nisi ut aliquip ex ea\"},\r\n        {\"id\": \"3\",\"minutes\": 49,\"title\": \"commodo consequat\"}\r\n    ]\r\n};","import React, { FC, useState, useEffect } from 'react';\n\nimport Header from './Header';\nimport IconLabelTabs from './Tabs/IconLabelsPanel';\n\nimport { Task } from '../types/Task';\nimport { AllTasks } from '../tasks/tasks';\n\n\ntype FilteredDataType = {\n  [key: string]: string;\n}\n\nconst Main: FC = (): JSX.Element => {\n  const [tasks, setTasks] = useState<Object>({});\n  const [foundedTask, setFoundedTask] = useState<Object>({});\n\n  useEffect(() => {\n    setTasks(AllTasks);\n    setFoundedTask(AllTasks);\n  }, []);\n\n  const search = (searchText: string): void => {\n    \n    const filteredData: FilteredDataType = {};\n\n    for (const key in tasks) {\n      // @ts-ignore\n      filteredData[key] = tasks[key]\n        .filter((task: Task): boolean => \n          task.title.toLowerCase()\n          .indexOf(searchText) > -1\n        );\n    }\n    setFoundedTask(filteredData);\n  };\n\n  return (\n    <>\n      <Header search={search} />\n      {// @ts-ignore\n      <IconLabelTabs data={foundedTask} />}\n    </>\n  );\n};\n\nexport default Main;","import React, { FC } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Main from './components/Main';\n\nconst App: FC = (): JSX.Element => {\n  return (\n    <Grid container justify=\"center\">\n      <Grid item lg={10} xs={12}>\n        <Main />\n      </Grid>\n    </Grid>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}